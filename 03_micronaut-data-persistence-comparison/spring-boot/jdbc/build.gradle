plugins {
	id 'org.springframework.boot' version '2.1.7.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
  id 'idea'
	id 'com.bmuschko.docker-remote-api' version '5.0.0'
}

group = 'com.example'
version = '0.0.1'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.flywaydb:flyway-core'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

task createDockerfile(type: com.bmuschko.gradle.docker.tasks.image.Dockerfile) {
	dependsOn assemble
	destFile = project.file('build/libs/Dockerfile')

	from "adoptopenjdk:11.0.4_11-jre-openj9-0.15.1"
	label(['maintainer': "Raul Estrada <raulestradaa@gmail.com>"])
	copyFile "spring-boot-jdbc-${ project.version }.jar", '/opt/app.jar'

	exposePort 8080
	entryPoint 'java', '-XX:+UnlockExperimentalVMOptions', '-XX:+UseCGroupMemoryLimitForHeap',
		'-Dcom.sun.management.jmxremote', '-noverify',
		"-Djava.awt.headless=true", "-Xms128m", "-Xmx128m", '-jar', '/opt/app.jar'
}

task buildImage(type: com.bmuschko.gradle.docker.tasks.image.DockerBuildImage) {
	dependsOn createDockerfile
	inputDir = createDockerfile.destFile.get().asFile.parentFile
	dockerFile = createDockerfile.destFile.get().asFile
	def tag = "nxtlab/spring-boot-jdbc:${ project.version }-jre-11-0.4".toLowerCase()
	tags = [tag]
	println "tag: ${ tag }"
}